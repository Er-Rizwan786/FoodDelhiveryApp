{"ast":null,"code":"// // src/context.js\n\n// import React, { createContext, useContext, useMemo, useReducer, useState } from 'react';\n\n// const AppContext = createContext(null);\n\n// const initialState = {\n//   cart: [],\n// };\n\n// const DEFAULT_LAT = 28.7041; \n// const DEFAULT_LNG = 77.1025;\n\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case 'ADD_TO_CART': {\n//       const item = action.payload;\n//       const exists = state.cart.find(i => i.id === item.id);\n//       const cart = exists\n//         ? state.cart.map(i => (i.id === item.id ? { ...i, qty: i.qty + 1 } : i))\n//         : [...state.cart, { ...item, qty: 1 }];\n//       return { ...state, cart };\n//     }\n//     case 'REMOVE_FROM_CART': {\n//       const id = action.payload;\n//       return { ...state, cart: state.cart.filter(i => i.id !== id) };\n//     }\n//     case 'DECREMENT_ITEM': {\n//       const id = action.payload;\n//       const cart = state.cart\n//         .map(i => (i.id === id ? { ...i, qty: i.qty - 1 } : i))\n//         .filter(i => i.qty > 0);\n//       return { ...state, cart };\n//     }\n//     case 'CLEAR_CART':\n//       return { ...state, cart: [] };\n//     default:\n//       return state;\n//   }\n// }\n\n// export const AppProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [user, setUser] = useState(null);\n//   const [isSignInPanelOpen, setIsSignInPanelOpen] = useState(false);\n\n//   const [userLocation, setUserLocation] = useState({\n//     lat: DEFAULT_LAT,\n//     lng: DEFAULT_LNG\n//   });\n//   const [userCity, setUserCity] = useState(\"Delhi\");\n\n//   const addToCart = (item) => {\n//     dispatch({ type: 'ADD_TO_CART', payload: item });\n//   };\n//   const removeFromCart = (id) => dispatch({ type: 'REMOVE_FROM_CART', payload: id });\n//   const decrementItem = (id) => dispatch({ type: 'DECREMENT_ITEM', payload: id });\n//   const clearCart = () => dispatch({ type: 'CLEAR_CART' });\n\n//   const login = (userData) => {\n//     setIsLoggedIn(true);\n//     setUser(userData);\n//   };\n//   const logout = () => {\n//     setIsLoggedIn(false);\n//     setUser(null);\n//   };\n\n//   const openSignInPanel = () => setIsSignInPanelOpen(true);\n//   const closeSignInPanel = () => setIsSignInPanelOpen(false);\n\n//   const cartCount = useMemo(() => state.cart.reduce((sum, i) => sum + i.qty, 0), [state.cart]);\n\n//   const value = useMemo(() => ({\n//     cart: state.cart,\n//     cartCount,\n//     addToCart,\n//     removeFromCart,\n//     decrementItem,\n//     clearCart,\n//     searchTerm,\n//     setSearchTerm,\n//     isLoggedIn,\n//     user,\n//     login,\n//     logout,\n//     isSignInPanelOpen,\n//     openSignInPanel,\n//     closeSignInPanel,\n//     userLocation,\n//     setUserLocation,\n//     userCity,\n//     setUserCity,\n//   }), [\n//       state.cart,\n//       cartCount,\n//       searchTerm,\n//       isLoggedIn,\n//       user,\n//       isSignInPanelOpen,\n//       userLocation,\n//       userCity,\n//   ]);\n\n//   return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n// };\n\n// export const useApp = () => useContext(AppContext);","map":{"version":3,"names":[],"sources":["/Users/rizwan/Documents/FoodDelhiveryApp/src/context.js"],"sourcesContent":["// // src/context.js\n\n// import React, { createContext, useContext, useMemo, useReducer, useState } from 'react';\n\n// const AppContext = createContext(null);\n\n// const initialState = {\n//   cart: [],\n// };\n\n// const DEFAULT_LAT = 28.7041; \n// const DEFAULT_LNG = 77.1025;\n\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case 'ADD_TO_CART': {\n//       const item = action.payload;\n//       const exists = state.cart.find(i => i.id === item.id);\n//       const cart = exists\n//         ? state.cart.map(i => (i.id === item.id ? { ...i, qty: i.qty + 1 } : i))\n//         : [...state.cart, { ...item, qty: 1 }];\n//       return { ...state, cart };\n//     }\n//     case 'REMOVE_FROM_CART': {\n//       const id = action.payload;\n//       return { ...state, cart: state.cart.filter(i => i.id !== id) };\n//     }\n//     case 'DECREMENT_ITEM': {\n//       const id = action.payload;\n//       const cart = state.cart\n//         .map(i => (i.id === id ? { ...i, qty: i.qty - 1 } : i))\n//         .filter(i => i.qty > 0);\n//       return { ...state, cart };\n//     }\n//     case 'CLEAR_CART':\n//       return { ...state, cart: [] };\n//     default:\n//       return state;\n//   }\n// }\n\n// export const AppProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [user, setUser] = useState(null);\n//   const [isSignInPanelOpen, setIsSignInPanelOpen] = useState(false);\n  \n//   const [userLocation, setUserLocation] = useState({\n//     lat: DEFAULT_LAT,\n//     lng: DEFAULT_LNG\n//   });\n//   const [userCity, setUserCity] = useState(\"Delhi\");\n\n//   const addToCart = (item) => {\n//     dispatch({ type: 'ADD_TO_CART', payload: item });\n//   };\n//   const removeFromCart = (id) => dispatch({ type: 'REMOVE_FROM_CART', payload: id });\n//   const decrementItem = (id) => dispatch({ type: 'DECREMENT_ITEM', payload: id });\n//   const clearCart = () => dispatch({ type: 'CLEAR_CART' });\n\n//   const login = (userData) => {\n//     setIsLoggedIn(true);\n//     setUser(userData);\n//   };\n//   const logout = () => {\n//     setIsLoggedIn(false);\n//     setUser(null);\n//   };\n\n//   const openSignInPanel = () => setIsSignInPanelOpen(true);\n//   const closeSignInPanel = () => setIsSignInPanelOpen(false);\n\n//   const cartCount = useMemo(() => state.cart.reduce((sum, i) => sum + i.qty, 0), [state.cart]);\n\n//   const value = useMemo(() => ({\n//     cart: state.cart,\n//     cartCount,\n//     addToCart,\n//     removeFromCart,\n//     decrementItem,\n//     clearCart,\n//     searchTerm,\n//     setSearchTerm,\n//     isLoggedIn,\n//     user,\n//     login,\n//     logout,\n//     isSignInPanelOpen,\n//     openSignInPanel,\n//     closeSignInPanel,\n//     userLocation,\n//     setUserLocation,\n//     userCity,\n//     setUserCity,\n//   }), [\n//       state.cart,\n//       cartCount,\n//       searchTerm,\n//       isLoggedIn,\n//       user,\n//       isSignInPanelOpen,\n//       userLocation,\n//       userCity,\n//   ]);\n\n//   return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n// };\n\n// export const useApp = () => useContext(AppContext);"],"mappings":"AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}