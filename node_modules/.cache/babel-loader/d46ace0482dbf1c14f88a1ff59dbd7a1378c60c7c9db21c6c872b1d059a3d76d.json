{"ast":null,"code":"var _jsxFileName = \"/Users/rizwan/Documents/create react app/my-app/src/Banner.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n\n// import{useState, useEffect} from \"react\"; \n\n// const Card = (props) =>{\n//     const {data} = props ;\n//     const {imageId} = data ; \n//     return(\n//         <img src = {\"https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/\"+imageId} alt = \"banner\"  className =\"logoimage\" /> \n//     )\n// }\n\n// const Banner = () => {\n\n//     const [list,setList] = useState([]); \n//     const fetchData = async () =>{\n//         const response = await fetch (\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=23.7956531&lng=86.43038589999999&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\");\n//         const Data = await response.json(); \n//         setList(Data?.data?.cards[0]?.card.card.imageGridCards.info)\n\n//     }\n\n//     useEffect(()=>{ \n//     fetchData() \n\n//     },[]) \n\n//     return(\n//         <div>\n//             <div className=\"bannerConatiner\">\n//                 <h3>What's on your mind?</h3>\n//             </div>\n// .\n//             <div className=\"bannerConatiner\">\n//                 {\n//                     list.map((each)=>(<Card data ={each} key ={each.id}/>))\n//                 }\n\n//             </div> \n\n//         </div>\n//     )\n// } \n// export default Banner;\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = props => {\n  const {\n    data\n  } = props;\n  const {\n    cloudinaryImageId\n  } = data; // Note: key is usually 'cloudinaryImageId' for images\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/\" + cloudinaryImageId,\n    alt: \"banner\",\n    className: \"logoimage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nconst Banner = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const fetchData = async () => {\n    var _Data$data;\n    const response = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=23.7956531&lng=86.43038589999999&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\");\n    const Data = await response.json();\n\n    // Find the card containing restaurants list\n    // Usually cards contain various widgets, restaurants are often inside a nested structure.\n    // From recent data, restaurant list can be inside cards[2].card.card.gridElements.infoWithStyle.restaurants\n\n    const cards = (Data === null || Data === void 0 ? void 0 : (_Data$data = Data.data) === null || _Data$data === void 0 ? void 0 : _Data$data.cards) || [];\n\n    // Find card that has restaurants list\n    let restaurantList = [];\n    for (let card of cards) {\n      var _card$card, _cardData$gridElement, _cardData$gridElement2;\n      const cardData = card === null || card === void 0 ? void 0 : (_card$card = card.card) === null || _card$card === void 0 ? void 0 : _card$card.card;\n      if (cardData !== null && cardData !== void 0 && (_cardData$gridElement = cardData.gridElements) !== null && _cardData$gridElement !== void 0 && (_cardData$gridElement2 = _cardData$gridElement.infoWithStyle) !== null && _cardData$gridElement2 !== void 0 && _cardData$gridElement2.restaurants) {\n        restaurantList = cardData.gridElements.infoWithStyle.restaurants;\n        break;\n      }\n    }\n    setList(restaurantList);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannerConatiner\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"What's on your mind?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannerConatiner\",\n      children: list.length > 0 ? list.map(each => /*#__PURE__*/_jsxDEV(Card, {\n        data: each\n      }, each.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n_c2 = Banner;\nexport default Banner;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Banner\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Card","props","data","cloudinaryImageId","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Banner","_s","list","setList","fetchData","_Data$data","response","fetch","Data","json","cards","restaurantList","card","_card$card","_cardData$gridElement","_cardData$gridElement2","cardData","gridElements","infoWithStyle","restaurants","children","length","map","each","id","_c2","$RefreshReg$"],"sources":["/Users/rizwan/Documents/create react app/my-app/src/Banner.js"],"sourcesContent":["// import './App.css';\n\n// import{useState, useEffect} from \"react\"; \n  \n\n\n\n// const Card = (props) =>{\n//     const {data} = props ;\n//     const {imageId} = data ; \n//     return(\n//         <img src = {\"https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/\"+imageId} alt = \"banner\"  className =\"logoimage\" /> \n//     )\n// }\n\n\n\n\n\n\n// const Banner = () => {\n     \n//     const [list,setList] = useState([]); \n//     const fetchData = async () =>{\n//         const response = await fetch (\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=23.7956531&lng=86.43038589999999&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\");\n//         const Data = await response.json(); \n//         setList(Data?.data?.cards[0]?.card.card.imageGridCards.info)\n\n//     }\n\n\n\n//     useEffect(()=>{ \n//     fetchData() \n\n//     },[]) \n\n\n\n    \n//     return(\n//         <div>\n//             <div className=\"bannerConatiner\">\n//                 <h3>What's on your mind?</h3>\n//             </div>\n// .\n//             <div className=\"bannerConatiner\">\n//                 {\n//                     list.map((each)=>(<Card data ={each} key ={each.id}/>))\n//                 }\n                \n                \n//             </div> \n           \n//         </div>\n//     )\n// } \n// export default Banner;\n\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\n\nconst Card = (props) => {\n  const { data } = props;\n  const { cloudinaryImageId } = data;  // Note: key is usually 'cloudinaryImageId' for images\n\n  return (\n    <img\n      src={\"https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/\" + cloudinaryImageId}\n      alt=\"banner\"\n      className=\"logoimage\"\n    />\n  );\n};\n\nconst Banner = () => {\n  const [list, setList] = useState([]);\n\n  const fetchData = async () => {\n    const response = await fetch(\n      \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=23.7956531&lng=86.43038589999999&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\"\n    );\n    const Data = await response.json();\n\n    // Find the card containing restaurants list\n    // Usually cards contain various widgets, restaurants are often inside a nested structure.\n    // From recent data, restaurant list can be inside cards[2].card.card.gridElements.infoWithStyle.restaurants\n\n    const cards = Data?.data?.cards || [];\n\n    // Find card that has restaurants list\n    let restaurantList = [];\n\n    for (let card of cards) {\n      const cardData = card?.card?.card;\n      if (cardData?.gridElements?.infoWithStyle?.restaurants) {\n        restaurantList = cardData.gridElements.infoWithStyle.restaurants;\n        break;\n      }\n    }\n\n    setList(restaurantList);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"bannerConatiner\">\n        <h3>What's on your mind?</h3>\n      </div>\n\n      <div className=\"bannerConatiner\">\n        {list.length > 0 ? (\n          list.map((each) => <Card data={each} key={each.id} />)\n        ) : (\n          <p>No restaurants available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}