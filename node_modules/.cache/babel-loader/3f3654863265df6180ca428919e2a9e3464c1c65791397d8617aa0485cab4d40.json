{"ast":null,"code":"// // src/api.js\n\n// const SWIGGY_BASE = 'https://www.swiggy.com';\n\n// export function buildListingUrl(lat, lng) {\n//   const params = new URLSearchParams({\n//     lat: String(lat),\n//     lng: String(lng),\n//     'is-seo-homepage-enabled': 'true',\n//     page_type: 'DESKTOP_WEB_LISTING',\n//   });\n//   return `${SWIGGY_BASE}/dapi/restaurants/list/v5?${params.toString()}`;\n// }\n\n// async function safeFetchJson(url, { signal } = {}) {\n//   try {\n//     const res = await fetch(url, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json, text/plain, */*',\n//       },\n//       signal,\n//     });\n\n//     if (!res.ok) {\n//       throw new Error(`HTTP ${res.status} for ${url}`);\n//     }\n//     return res.json();\n//   } catch (error) {\n//     if (error.name === 'AbortError') {\n//       console.log(`Fetch aborted for ${url}`);\n//     } else {\n//       console.error(`Fetch error for ${url}:`, error);\n//     }\n//     throw error;\n//   }\n// }\n\n// export async function fetchRestaurants(lat, lng, signal) {\n//   const url = buildListingUrl(lat, lng);\n//   const json = await safeFetchJson(url, { signal });\n//   return {\n//     restaurants: extractRestaurants(json),\n//     areaTitle: extractSectionTitle(json)\n//   };\n// }\n\n// export async function fetchMenu(restaurantId, lat, lng, signal) {\n//   const params = new URLSearchParams({\n//     lat: String(lat),\n//     lng: String(lng),\n//     restaurantId: String(restaurantId),\n//     page_type: 'DESKTOP_MENU_LISTING',\n//   });\n//   params.set('page-type', 'REGULAR_MENU');\n//   params.set('complete-menu', 'true');\n//   const url = `${SWIGGY_BASE}/dapi/menu/pl?${params.toString()}`;\n//   return safeFetchJson(url, { signal });\n// }\n\n// export function extractBannerImages(json) {\n//   const cards = json?.data?.cards ?? [];\n//   for (const c of cards) {\n//     const card = c?.card?.card;\n//     const imgs =\n//       card?.imageGridCards?.info ||\n//       card?.gridElements?.infoWithStyle?.info ||\n//       card?.gridElements?.infoWithStyle?.restaurants ||\n//       [];\n//     const candidates = Array.isArray(imgs) ? imgs : [];\n//     const imageIds = candidates\n//       .map((it) => it?.imageId || it?.cloudinaryImageId || it?.info?.cloudinaryImageId)\n//       .filter(Boolean);\n//     if (imageIds.length) return imageIds;\n//   }\n//   return [];\n// }\n\n// export function extractSectionTitle(json) {\n//   const cards = json?.data?.cards ?? [];\n//   for (const c of cards) {\n//     const title =\n//       c?.card?.card?.title ||\n//       c?.card?.card?.header?.title ||\n//       c?.card?.card?.header?.subtitle;\n//     if (title) return title;\n//   }\n//   return '';\n// }\n\n// export function extractRestaurants(json) {\n//   const cards = json?.data?.cards ?? [];\n//   for (const c of cards) {\n//     const card = c?.card?.card;\n//     const restaurants = card?.gridElements?.infoWithStyle?.restaurants;\n//     if (Array.isArray(restaurants) && restaurants.length) {\n//       return restaurants;\n//     }\n//     const altList = card?.data?.cards?.flatMap((cc) => cc?.card?.card?.gridElements?.infoWithStyle?.restaurants || []);\n//     if (Array.isArray(altList) && altList.length) {\n//       return altList;\n//     }\n//   }\n//   return [];\n// }\n\n// export function extractMenuItems(json) {\n//     const menuItems = [];\n//     const sections = json?.data?.cards || [];\n\n//     const findItemsInCards = (cards) => {\n//         if (!Array.isArray(cards)) return;\n\n//         for (const card of cards) {\n//             const itemCards = card?.card?.card?.itemCards || card?.card?.card?.carousel;\n\n//             if (itemCards) {\n//                 for (const item of itemCards) {\n//                     const itemData = item?.card?.info;\n//                     if (itemData) {\n//                         menuItems.push({\n//                             id: itemData.id,\n//                             name: itemData.name,\n//                             price: (itemData.price || itemData.defaultPrice) / 100,\n//                             imgId: itemData.cloudinaryImageId\n//                         });\n//                     }\n//                 }\n//             } else if (card?.groupedCard?.cardGroupMap?.REGULAR?.cards) {\n//                 findItemsInCards(card.groupedCard.cardGroupMap.REGULAR.cards);\n//             } else if (card?.card?.card?.cards) {\n//                 findItemsInCards(card.card.card.cards);\n//             }\n//         }\n//     };\n\n//     findItemsInCards(sections);\n\n//     if (menuItems.length === 0) {\n//         const foodItems = json?.data?.menu?.items;\n//         if (foodItems) {\n//             for (const key in foodItems) {\n//                 const itemData = foodItems[key];\n//                 menuItems.push({\n//                     id: itemData.id,\n//                     name: itemData.name,\n//                     price: itemData.price / 100,\n//                     imgId: itemData.cloudinaryImageId\n//                 });\n//             }\n//         }\n//     }\n\n//     console.log(\"Extracted Menu Items:\", menuItems);\n\n//     return menuItems;\n// }","map":{"version":3,"names":[],"sources":["/Users/rizwan/Documents/FoodDelhiveryApp/src/api.js"],"sourcesContent":["// // src/api.js\n\n// const SWIGGY_BASE = 'https://www.swiggy.com';\n\n// export function buildListingUrl(lat, lng) {\n//   const params = new URLSearchParams({\n//     lat: String(lat),\n//     lng: String(lng),\n//     'is-seo-homepage-enabled': 'true',\n//     page_type: 'DESKTOP_WEB_LISTING',\n//   });\n//   return `${SWIGGY_BASE}/dapi/restaurants/list/v5?${params.toString()}`;\n// }\n\n// async function safeFetchJson(url, { signal } = {}) {\n//   try {\n//     const res = await fetch(url, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json, text/plain, */*',\n//       },\n//       signal,\n//     });\n    \n//     if (!res.ok) {\n//       throw new Error(`HTTP ${res.status} for ${url}`);\n//     }\n//     return res.json();\n//   } catch (error) {\n//     if (error.name === 'AbortError') {\n//       console.log(`Fetch aborted for ${url}`);\n//     } else {\n//       console.error(`Fetch error for ${url}:`, error);\n//     }\n//     throw error;\n//   }\n// }\n\n// export async function fetchRestaurants(lat, lng, signal) {\n//   const url = buildListingUrl(lat, lng);\n//   const json = await safeFetchJson(url, { signal });\n//   return {\n//     restaurants: extractRestaurants(json),\n//     areaTitle: extractSectionTitle(json)\n//   };\n// }\n\n// export async function fetchMenu(restaurantId, lat, lng, signal) {\n//   const params = new URLSearchParams({\n//     lat: String(lat),\n//     lng: String(lng),\n//     restaurantId: String(restaurantId),\n//     page_type: 'DESKTOP_MENU_LISTING',\n//   });\n//   params.set('page-type', 'REGULAR_MENU');\n//   params.set('complete-menu', 'true');\n//   const url = `${SWIGGY_BASE}/dapi/menu/pl?${params.toString()}`;\n//   return safeFetchJson(url, { signal });\n// }\n\n// export function extractBannerImages(json) {\n//   const cards = json?.data?.cards ?? [];\n//   for (const c of cards) {\n//     const card = c?.card?.card;\n//     const imgs =\n//       card?.imageGridCards?.info ||\n//       card?.gridElements?.infoWithStyle?.info ||\n//       card?.gridElements?.infoWithStyle?.restaurants ||\n//       [];\n//     const candidates = Array.isArray(imgs) ? imgs : [];\n//     const imageIds = candidates\n//       .map((it) => it?.imageId || it?.cloudinaryImageId || it?.info?.cloudinaryImageId)\n//       .filter(Boolean);\n//     if (imageIds.length) return imageIds;\n//   }\n//   return [];\n// }\n\n// export function extractSectionTitle(json) {\n//   const cards = json?.data?.cards ?? [];\n//   for (const c of cards) {\n//     const title =\n//       c?.card?.card?.title ||\n//       c?.card?.card?.header?.title ||\n//       c?.card?.card?.header?.subtitle;\n//     if (title) return title;\n//   }\n//   return '';\n// }\n\n// export function extractRestaurants(json) {\n//   const cards = json?.data?.cards ?? [];\n//   for (const c of cards) {\n//     const card = c?.card?.card;\n//     const restaurants = card?.gridElements?.infoWithStyle?.restaurants;\n//     if (Array.isArray(restaurants) && restaurants.length) {\n//       return restaurants;\n//     }\n//     const altList = card?.data?.cards?.flatMap((cc) => cc?.card?.card?.gridElements?.infoWithStyle?.restaurants || []);\n//     if (Array.isArray(altList) && altList.length) {\n//       return altList;\n//     }\n//   }\n//   return [];\n// }\n\n// export function extractMenuItems(json) {\n//     const menuItems = [];\n//     const sections = json?.data?.cards || [];\n\n//     const findItemsInCards = (cards) => {\n//         if (!Array.isArray(cards)) return;\n        \n//         for (const card of cards) {\n//             const itemCards = card?.card?.card?.itemCards || card?.card?.card?.carousel;\n            \n//             if (itemCards) {\n//                 for (const item of itemCards) {\n//                     const itemData = item?.card?.info;\n//                     if (itemData) {\n//                         menuItems.push({\n//                             id: itemData.id,\n//                             name: itemData.name,\n//                             price: (itemData.price || itemData.defaultPrice) / 100,\n//                             imgId: itemData.cloudinaryImageId\n//                         });\n//                     }\n//                 }\n//             } else if (card?.groupedCard?.cardGroupMap?.REGULAR?.cards) {\n//                 findItemsInCards(card.groupedCard.cardGroupMap.REGULAR.cards);\n//             } else if (card?.card?.card?.cards) {\n//                 findItemsInCards(card.card.card.cards);\n//             }\n//         }\n//     };\n\n//     findItemsInCards(sections);\n    \n//     if (menuItems.length === 0) {\n//         const foodItems = json?.data?.menu?.items;\n//         if (foodItems) {\n//             for (const key in foodItems) {\n//                 const itemData = foodItems[key];\n//                 menuItems.push({\n//                     id: itemData.id,\n//                     name: itemData.name,\n//                     price: itemData.price / 100,\n//                     imgId: itemData.cloudinaryImageId\n//                 });\n//             }\n//         }\n//     }\n    \n//     console.log(\"Extracted Menu Items:\", menuItems);\n\n//     return menuItems;\n// }"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}